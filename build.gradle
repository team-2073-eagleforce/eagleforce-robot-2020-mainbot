plugins {
    id "java"
    id "idea"
    id "edu.wpi.first.GradleRIO" version "2020.3.2"
}

group 'com.team2073'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

def COMMON_VERSION = '0.5.0-SNAPSHOT'
def ROBOT_MAIN_CLASS = "com.team2073.robot.Main"

// Pass arguments via command line to active different modes
// Ex: ./gradlew deploy -Psim
// Sets simulation mode using the simulation robot class defined below
// Ex: ./gradlew deploy -PtestBoard
// Sets simulation mode using the test board robot class defined below

// Property keys
def PROP_KEY_REMOTE_DEBUG_MODE = "remoteDebug"
def PROP_KEY_TEAM_NUMBER = "teamNumber"

// Configurale properties
def TEAM_NUMBER = 2073
def DEBUG_MODE = false
def IP_ADDRESS
def includeDesktopSupport = true

println "Team 2073 custom arguments available:"
println "\t-P" + PROP_KEY_REMOTE_DEBUG_MODE
println "\t-P" + PROP_KEY_TEAM_NUMBER + "=####"

ext {

    if (project.hasProperty(PROP_KEY_REMOTE_DEBUG_MODE)) {
        println "Remote debug mode enabled"
        DEBUG_MODE = true
    }

    if (project.hasProperty(PROP_KEY_TEAM_NUMBER)) {
        println "============================================================================"
        println "Overriding default team # of [" + TEAM_NUMBER + "] with [" + teamNumber + "]."
        println "============================================================================"
        TEAM_NUMBER = teamNumber.toInteger()
    }

    IP_ADDRESS = "10." + TEAM_NUMBER.toString().substring(0, 2) + "." + TEAM_NUMBER.toString().substring(2, 4) + ".2"
    println "Setting IP address to: " + IP_ADDRESS
}

deploy {
    targets {
        roboRIO("roborio") {
            // Team number is loaded either from the .wpilib/wpilib_preferences.json
            // or from command line. If not found an exception will be thrown.
            // You can use getTeamOrDefault(team) instead of getTeamNumber if you
            // want to store a team number in this file.
            team = TEAM_NUMBER

        }
    }
    artifacts {
        frcJavaArtifact('frcJava') {
            targets << "roborio"
            // Debug can be overridden by command line, for use with VSCode
            debug = frc.getDebugOrDefault(DEBUG_MODE)
        }
        // Built in artifact to deploy arbitrary files to the roboRIO.
        fileTreeArtifact('frcStaticFileDeploy') {
            // The directory below is the local directory to deploy
            files = fileTree(dir: 'src/main/deploy')
            // Deploy to RoboRIO target, into /home/lvuser/deploy
            targets << "roborio"
            directory = '/home/lvuser/deploy'
        }
    }
}
dependencies {
    implementation wpi.deps.wpilib()
    nativeZip wpi.deps.wpilibJni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.wpilibJni(wpi.platforms.desktop)


    implementation wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)

    // In Java for now, the argument must be false
    simulation wpi.deps.sim.gui(wpi.platforms.desktop, false)
    compile group: 'org.json', name: 'json', version: '20180813'
    compile group: 'com.team2073', name: 'common-util', version: COMMON_VERSION
    compile group: 'com.team2073', name: 'common-wpi-util', version: COMMON_VERSION
    compile group: 'com.team2073', name: 'common-guice', version: COMMON_VERSION
    compile group: 'com.opencsv', name: 'opencsv', version: '5.0'

    testCompile group: 'com.team2073', name: 'common-wpi-simulation', version: COMMON_VERSION
    testCompile group: 'com.team2073', name: 'common-wpi-simulation-stubs', version: COMMON_VERSION

    testImplementation 'junit:junit:4.12'


}
wrapper {
    gradleVersion = "6.0"
}
jar {
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_MAIN_CLASS)
}
